[{"E:\\software\\nodeExamples\\delivery-frontend\\src\\index.js":"1","E:\\software\\nodeExamples\\delivery-frontend\\src\\App.js":"2","E:\\software\\nodeExamples\\delivery-frontend\\src\\reportWebVitals.js":"3","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\MainComponent.js":"4","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\FooterComponent.js":"5","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\HeaderComponent.js":"6","E:\\software\\nodeExamples\\delivery-frontend\\src\\shared\\baseurl.js":"7","E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\configureStore.js":"8","E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\userLogin.js":"9","E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\ActionCreators.js":"10","E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\reducer.js":"11","E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\ActionTypes.js":"12","E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\forms.js":"13","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\RequestFormComponent.js":"14","E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\requests.js":"15","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\PendingRequestsComponent.js":"16","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\LoginComponent.js":"17","E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\targetRoute.js":"18","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\LoadingComponent.js":"19","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\SignupComponent.js":"20","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\RatingStarComponent.js":"21"},{"size":642,"mtime":1608529967405,"results":"22","hashOfConfig":"23"},{"size":442,"mtime":1608887296185,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":6067,"mtime":1610538476472,"results":"26","hashOfConfig":"23"},{"size":2963,"mtime":1610086535113,"results":"27","hashOfConfig":"23"},{"size":17705,"mtime":1610609061773,"results":"28","hashOfConfig":"23"},{"size":43,"mtime":1609219555100,"results":"29","hashOfConfig":"23"},{"size":975,"mtime":1610344909676,"results":"30","hashOfConfig":"23"},{"size":491,"mtime":1609321731868,"results":"31","hashOfConfig":"23"},{"size":11200,"mtime":1610540597416,"results":"32","hashOfConfig":"23"},{"size":142,"mtime":1608882836398,"results":"33","hashOfConfig":"23"},{"size":884,"mtime":1610344127159,"results":"34","hashOfConfig":"23"},{"size":324,"mtime":1609311388104,"results":"35","hashOfConfig":"23"},{"size":5914,"mtime":1610540134340,"results":"36","hashOfConfig":"23"},{"size":1175,"mtime":1610345035314,"results":"37","hashOfConfig":"23"},{"size":3331,"mtime":1610366202057,"results":"38","hashOfConfig":"23"},{"size":3954,"mtime":1610608260171,"results":"39","hashOfConfig":"23"},{"size":419,"mtime":1609914862552,"results":"40","hashOfConfig":"23"},{"size":255,"mtime":1609959383050,"results":"41","hashOfConfig":"23"},{"size":5850,"mtime":1610091289034,"results":"42","hashOfConfig":"23"},{"size":657,"mtime":1610361153694,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1wv7mug",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"E:\\software\\nodeExamples\\delivery-frontend\\src\\index.js",[],["93","94"],"E:\\software\\nodeExamples\\delivery-frontend\\src\\App.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\reportWebVitals.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\MainComponent.js",["95","96","97","98"],"import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport RequestForm from './RequestFormComponent';\r\nimport Login from './LoginComponent';\r\nimport Signup from './SignupComponent';\r\nimport PendingRequests from './PendingRequestsComponent';\r\nimport RatingStar from './RatingStarComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postSignUp, postLogin, signOut, postRequestForm, fetchRequests,\r\n     addRoute, resetRoute, fetchUnratedRequests, postRating } from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport { createBrowserHistory } from 'history';\r\n\r\n\r\nvar history = createBrowserHistory();\r\n\r\n// Get the current location.\r\nvar location = history.location;\r\n\r\n// Listen for changes to the current location.\r\nlet unlisten = history.listen(({ location, action }) => {\r\n    console.log(action, location.pathname, location.state);\r\n  });\r\n\r\n//   history.push('/pendingrequests');\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn,\r\n        requests: state.requests,\r\n        targetRoute: state.targetRoute,\r\n        unratedRequests: state.unratedRequests\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postLogin: (email, password) => dispatch(postLogin(email, password)),\r\n    postSignUp: (email, phone, password, location, role) => dispatch(postSignUp(email, phone, password, location, role)),\r\n    resetLoginForm: () => { dispatch(actions.reset('login'))},\r\n    resetSignUpForm: () => { dispatch(actions.reset('signup'))},\r\n    signOut: () => dispatch(signOut()),\r\n    postRequestForm: (destination, latitude, longitude, phone, history) => dispatch(postRequestForm(destination, latitude, longitude, phone, history)),\r\n    resetRequestForm: () => { dispatch(actions.reset('request'))},\r\n    fetchRequests: () => dispatch(fetchRequests()),\r\n    addRoute: (route) => dispatch(addRoute(route)),\r\n    resetRoute: () => dispatch(resetRoute()),\r\n    fetchUnratedRequests: (history) => dispatch(fetchUnratedRequests(history)),\r\n    postRating: (requestId, rating, feedback, history) => dispatch(postRating(requestId, rating, feedback, history))\r\n  });\r\n\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchRequests();\r\n        this.props.fetchUnratedRequests(history);\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     this.props.fetchUnratedRequests(history);\r\n    // }\r\n\r\n    render(){\r\n        const HomePage = () => {\r\n            return(\r\n            <RequestForm isLoggedIn={this.props.isLoggedIn}\r\n            postRequestForm={this.props.postRequestForm} \r\n            resetRequestForm={this.props.resetRequestForm}             \r\n            history={this.props.history}\r\n            />\r\n            )\r\n        }\r\n        const Requests = () => {\r\n            return(\r\n                <PendingRequests \r\n                isLoggedIn={this.props.isLoggedIn}\r\n                requests={this.props.requests.requests}\r\n                errMess={this.props.requests.errMess}\r\n                addRoute={this.props.addRoute}\r\n                fetchRequests={this.props.fetchRequests}\r\n                />\r\n            );\r\n            // if (this.props.isLoggedIn.isLoggedIn) {\r\n            //     console.log(this.props.isLoggedIn.isLoggedIn + \"in main component\");\r\n            //     return(<div></div>);\r\n    \r\n            // }\r\n            // else {\r\n            //     console.log(this.props.isLoggedIn.isLoggedIn + \"in main component\");\r\n            //     return(<div></div>);\r\n            // }\r\n        };  \r\n        const LoginPage = () => {\r\n            return(\r\n                <Login isLoggedIn={this.props.isLoggedIn}\r\n                resetLoginForm={this.props.resetLoginForm}\r\n                postLogin={this.props.postLogin}\r\n                targetRoute={this.props.targetRoute}\r\n                resetRoute={this.props.resetRoute}\r\n                fetchRequests={this.props.fetchRequests}\r\n                history={this.props.history}\r\n                />\r\n            )\r\n        };\r\n\r\n        const SignupPage = () => {\r\n            return(\r\n                <Signup\r\n                isLoggedIn={this.props.isLoggedIn}\r\n                resetSignUpForm={this.props.resetSignUpForm}\r\n                postSignUp={this.props.postSignUp}\r\n                targetRoute={this.props.targetRoute}\r\n                resetRoute={this.props.resetRoute}\r\n            />\r\n            );            \r\n        }\r\n        return(\r\n        <div>\r\n                <Header \r\n                isLoggedIn={this.props.isLoggedIn}\r\n                resetLoginForm={this.props.resetLoginForm} \r\n                resetSignUpForm={this.props.resetSignUpForm}\r\n                postSignUp={this.props.postSignUp} \r\n                postLogin={this.props.postLogin} \r\n                signOut={this.props.signOut} \r\n                unratedRequests={this.props.unratedRequests}\r\n                postRating={this.props.postRating}\r\n                history={this.props.history}\r\n                fetchUnratedRequests={this.props.fetchUnratedRequests}\r\n                />\r\n                <Switch>\r\n                    <Route path=\"/home\" component={HomePage} />\r\n                    <Route path=\"/pendingrequests\" component={Requests} />\r\n                    <Route path=\"/login\" component={LoginPage}/>\r\n                    <Route path=\"/signup\" component={SignupPage}/>\r\n                    {/* <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>}/>\r\n          <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders}/>}/> */}\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n                <Footer />\r\n        </div>);\r\n    }\r\n}\r\n\r\n// unlisten();\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\FooterComponent.js",["99"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row } from 'reactstrap';\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-left\">             \r\n                {/* <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <address>\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"contactus\">Contact Us</Link></li>\r\n                    </ul></address>\r\n                </div> */}\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <address>\r\n                    <h5>Our Address</h5>\r\n                    <Row>\r\n                    <Col>\r\n\t\t              Dothraki Street, Westeros<br />\r\n\t\t              Khal Kingdom<br />\r\n\t\t              Drogo State<br />\r\n                      </Col>\r\n                      <Col>\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +910000000000<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +911111111111<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a style={{ color: 'rgb(3, 233, 233)'}} href=\"mail to:dothraki@delivery.net\">\r\n                         dothraki@delivery.net</a></Col></Row>\r\n                    </address>\r\n                </div>\r\n                {/* <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <address>\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div></address>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <address>             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2021 Dothraki Delivery</p>\r\n                </div></address>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\HeaderComponent.js",["100","101"],"E:\\software\\nodeExamples\\delivery-frontend\\src\\shared\\baseurl.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\configureStore.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\userLogin.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\ActionCreators.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\reducer.js",[],["102","103"],"E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\ActionTypes.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\forms.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\RequestFormComponent.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React from 'react';\r\nimport { Nav, Jumbotron, NavbarToggler, Collapse, NavItem, Navbar, NavbarBrand, Button, Modal, ModalHeader, ModalBody, Label, Row, Input, Col } from 'reactstrap';\r\nimport { Link, NavLink, Redirect } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors, Form, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n\r\nconst RequestForm = (props) => {\r\n    const handleSubmit = async (values) => {\r\n        await props.postRequestForm(values.destination, values.latitude, values.longitude, values.phone, props.history);\r\n        // if(props.history.length === 1){\r\n        //     props.resetRequestForm();\r\n        // }        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container row row-content\">\r\n            <div className=\"col-12 col-md-7 offset-md-2 request_form\">\r\n                <Form model=\"request\" onSubmit={(values) => handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"destination\" md={4}>Destination Address</Label>\r\n                        <Col md={8}>\r\n                            <Control.text model=\".destination\" id=\"destination\" name=\"destination\" placeholder=\"Street, Landmark, City\"\r\n                                className=\"form-control\" validators={{ required, minLength: minLength(10), maxLength: maxLength(25) }}\r\n                            ></Control.text>\r\n                            <Errors className=\"text-danger\" model=\".destination\" show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 10 chars',\r\n                                    maxLength: 'Must be smaller than or equal to 25 chars'\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"latitude\" md={4}>Destination Latitude</Label>\r\n                        <Col md={8}>\r\n                            <Control.text model=\".latitude\" id=\"latitude\" name=\"latitude\" placeholder=\"xx.xxxx\"\r\n                                validators={{ required, minLength: minLength(7), maxLength: maxLength(10) }}\r\n                                className=\"form-control\"></Control.text>\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".latitude\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 7 chars',\r\n                                    maxLength: 'Must be smaller than or equal to 10 chars'\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"longitude\" md={4}>Destination Longitude</Label>\r\n                        <Col md={8}>\r\n                            <Control.text model=\".longitude\" id=\"longitude\" name=\"longitude\"\r\n                                placeholder=\"yy.yyyy\" className=\"form-control\"\r\n                                validators={{ required, minLength: minLength(7), maxLength: maxLength(10) }}\r\n                            ></Control.text>\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".longitude\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 7 chars',\r\n                                    maxLength: 'Must be smaller than or equal to 10 chars'\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"phone\" md={4}>Destination's Contact No.</Label>\r\n                        <Col md={8}>\r\n                            <Control.text model=\".phone\" id=\"phone\" name=\"phone\"\r\n                                placeholder=\"Phone number of receiver\" className=\"form-control\"\r\n                                validators={{ required, minLength: minLength(10), maxLength: maxLength(10), isNumber }}\r\n                            ></Control.text>\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".phone\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 9 numbers',\r\n                                    maxLength: 'Must be smaller than or equal to 10 numbers',\r\n                                    isNumber: 'Must be a number'\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Col md={{ size: 8, offset: 4 }}>\r\n                            <Button type=\"submit\" className=\"requestFormButton\">\r\n                                Create Request\r\n                                    </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestForm;","E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\requests.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\PendingRequestsComponent.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\LoginComponent.js",["124","125","126"],"E:\\software\\nodeExamples\\delivery-frontend\\src\\redux\\targetRoute.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\LoadingComponent.js",[],"E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\SignupComponent.js",["127","128","129","130","131","132"],"import React, { useState } from 'react';\r\nimport { Button, Label, Row, Col } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Control, Errors, Form } from 'react-redux-form';\r\n\r\nconst validEmail = (val) => !required(val) || /^[A-Z0-9._%+-]+@[A-z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst required = (val) => val && val.length;\r\nconst validPhone = (val) => !required(val) || ((val) && (val.length === 10));\r\nconst validPassword = (val) => !required(val) || (val && val.length > 7);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n\r\nconst Signup = (props) => {\r\n    const [role, setRole] = useState(\"consumer\");\r\n\r\n\r\n    if(props.isLoggedIn.isLoggedIn){\r\n        var currentRoute = props.targetRoute.targetRoute;\r\n        console.log(\"targetRoute is :\" + currentRoute);\r\n        props.resetRoute();\r\n        props.fetchRequests();\r\n        return(<Redirect to={currentRoute} />)       \r\n    }\r\n    \r\n    \r\n    const handleSignUp = async (values) => {\r\n        await props.postSignUp(values.email, values.phone, values.password, values.location, role);\r\n        // alert(\"Email: \" + values.email\r\n        //     + \" Phone: \" + values.phone+ \" Role: \" + this.state.role);\r\n        props.resetSignUpForm();\r\n    }\r\n    return (\r\n        <div className=\"container row row-content\">\r\n             <div className=\"col-12 col-md-7 offset-md-2 pending_request\">\r\n        <Form model=\"signup\" onSubmit={(values) => handleSignUp(values)}>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"name\" md={4}>Full Name</Label>\r\n                <Col md={8}>\r\n                    <Control.text model=\".name\" type=\"text\" id=\"name\" name=\"name\" placeholder=\"Full Name\"\r\n                        className=\"form-control\" validators={{ required }} />\r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".name\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Required'\r\n                        }} /></Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={4}>E-mail</Label>\r\n                <Col md={8}>\r\n                    <Control.text model=\".email\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email Id\"\r\n                        className=\"form-control\" validators={{ required, validEmail }} />\r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".email\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Required ',\r\n                            validEmail: 'Must be a valid email'\r\n                        }}\r\n                    /></Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"phone\" md={4}>Phone</Label>\r\n                <Col md={8}>\r\n                    <Control.text model=\".phone\" type=\"tel\" id=\"phone\" name=\"phone\" placeholder=\"Phone Number\"\r\n                        className=\"form-control\" validators={{ required, validPhone, isNumber }} />\r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".phone\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Required ',\r\n                            validPhone: 'Must be a valid phone',\r\n                            isNumber: 'Must be a number'\r\n                        }}\r\n                    /></Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"password\" md={4}>Password</Label>\r\n                <Col md={8}>\r\n                    <Control.text model=\".password\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\"\r\n                        className=\"form-control\" validators={{ required, validPassword }} />\r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".password\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Required ',\r\n                            validPassword: 'Password must have more than 7 characters'\r\n                        }}\r\n                    /></Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"location\" md={4}>Current Location</Label>\r\n                <Col md={8}>\r\n                    <Control.text model=\".location\" type=\"text\" id=\"location\" name=\"location\" placeholder=\"Current Location\"\r\n                        className=\"form-control\" validators={{ required }} />\r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".location\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Required'\r\n                        }} /></Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"role\" md={4}>Role</Label>\r\n                <Col md={4}>\r\n                    <Control.select model=\".role\" value={role} name=\"role\" className=\"form-control\" onChange={(event) => { setRole(event.target.value) }}>\r\n                        <option value=\"consumer\">Consumer</option>\r\n                        <option value=\"agent\">Agent</option>\r\n                    </Control.select></Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Col md={{ size: 8, offset: 4 }}>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Sign Up\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","E:\\software\\nodeExamples\\delivery-frontend\\src\\components\\RatingStarComponent.js",["133"],"import ReactStars from \"react-rating-stars-component\";\r\nimport React from \"react\";\r\n\r\n\r\nconst ratingChanged = (newRating) => {\r\n    console.log(newRating);\r\n};\r\n\r\nconst RatingStar = (props) => {\r\n    return (\r\n        <div>\r\n            <ReactStars\r\n                count={5}\r\n                // onChange={ratingChanged}\r\n                size={24}\r\n                activeColor=\"#ffd700\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatingStar;\r\n\r\n// render(\r\n//   <ReactStars\r\n//     count={5}\r\n//     onChange={ratingChanged}\r\n//     size={24}\r\n//     activeColor=\"#ffd700\"\r\n//   />,\r\n\r\n//   document.getElementById(\"where-to-render\")\r\n// );",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":18},{"ruleId":"138","severity":1,"message":"142","line":20,"column":5,"nodeType":"140","messageId":"141","endLine":20,"endColumn":13},{"ruleId":"138","severity":1,"message":"143","line":23,"column":5,"nodeType":"140","messageId":"141","endLine":23,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":54,"column":5,"nodeType":"146","messageId":"147","endLine":56,"endColumn":6},{"ruleId":"138","severity":1,"message":"148","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"149","line":2,"column":144,"nodeType":"140","messageId":"141","endLine":2,"endColumn":147},{"ruleId":"138","severity":1,"message":"148","line":3,"column":19,"nodeType":"140","messageId":"141","endLine":3,"endColumn":23},{"ruleId":"134","replacedBy":"150"},{"ruleId":"136","replacedBy":"151"},{"ruleId":"138","severity":1,"message":"152","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"138","severity":1,"message":"153","line":2,"column":15,"nodeType":"140","messageId":"141","endLine":2,"endColumn":24},{"ruleId":"138","severity":1,"message":"154","line":2,"column":26,"nodeType":"140","messageId":"141","endLine":2,"endColumn":39},{"ruleId":"138","severity":1,"message":"155","line":2,"column":41,"nodeType":"140","messageId":"141","endLine":2,"endColumn":49},{"ruleId":"138","severity":1,"message":"156","line":2,"column":51,"nodeType":"140","messageId":"141","endLine":2,"endColumn":58},{"ruleId":"138","severity":1,"message":"157","line":2,"column":60,"nodeType":"140","messageId":"141","endLine":2,"endColumn":66},{"ruleId":"138","severity":1,"message":"158","line":2,"column":68,"nodeType":"140","messageId":"141","endLine":2,"endColumn":79},{"ruleId":"138","severity":1,"message":"159","line":2,"column":89,"nodeType":"140","messageId":"141","endLine":2,"endColumn":94},{"ruleId":"138","severity":1,"message":"160","line":2,"column":96,"nodeType":"140","messageId":"141","endLine":2,"endColumn":107},{"ruleId":"138","severity":1,"message":"161","line":2,"column":109,"nodeType":"140","messageId":"141","endLine":2,"endColumn":118},{"ruleId":"138","severity":1,"message":"162","line":2,"column":132,"nodeType":"140","messageId":"141","endLine":2,"endColumn":137},{"ruleId":"138","severity":1,"message":"148","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":14},{"ruleId":"138","severity":1,"message":"163","line":3,"column":16,"nodeType":"140","messageId":"141","endLine":3,"endColumn":23},{"ruleId":"138","severity":1,"message":"164","line":3,"column":25,"nodeType":"140","messageId":"141","endLine":3,"endColumn":33},{"ruleId":"138","severity":1,"message":"165","line":4,"column":19,"nodeType":"140","messageId":"141","endLine":4,"endColumn":28},{"ruleId":"138","severity":1,"message":"166","line":4,"column":44,"nodeType":"140","messageId":"141","endLine":4,"endColumn":51},{"ruleId":"167","severity":1,"message":"168","line":26,"column":29,"nodeType":"169","endLine":28,"endColumn":30},{"ruleId":"167","severity":1,"message":"168","line":41,"column":29,"nodeType":"169","endLine":43,"endColumn":58},{"ruleId":"167","severity":1,"message":"168","line":59,"column":29,"nodeType":"169","endLine":62,"endColumn":30},{"ruleId":"167","severity":1,"message":"168","line":78,"column":29,"nodeType":"169","endLine":81,"endColumn":30},{"ruleId":"167","severity":1,"message":"168","line":52,"column":21,"nodeType":"169","endLine":54,"endColumn":22},{"ruleId":"167","severity":1,"message":"168","line":68,"column":21,"nodeType":"169","endLine":70,"endColumn":22},{"ruleId":"167","severity":1,"message":"170","line":85,"column":29,"nodeType":"169","endLine":85,"endColumn":112},{"ruleId":"167","severity":1,"message":"168","line":38,"column":21,"nodeType":"169","endLine":39,"endColumn":78},{"ruleId":"167","severity":1,"message":"168","line":51,"column":21,"nodeType":"169","endLine":52,"endColumn":90},{"ruleId":"167","severity":1,"message":"168","line":66,"column":21,"nodeType":"169","endLine":67,"endColumn":100},{"ruleId":"167","severity":1,"message":"168","line":82,"column":21,"nodeType":"169","endLine":83,"endColumn":93},{"ruleId":"167","severity":1,"message":"168","line":97,"column":21,"nodeType":"169","endLine":98,"endColumn":78},{"ruleId":"167","severity":1,"message":"171","line":110,"column":21,"nodeType":"169","endLine":110,"endColumn":155},{"ruleId":"138","severity":1,"message":"172","line":5,"column":7,"nodeType":"140","messageId":"141","endLine":5,"endColumn":20},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'RatingStar' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'unlisten' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Link' is defined but never used.","'Row' is defined but never used.",["173"],["174"],"'Nav' is defined but never used.","'Jumbotron' is defined but never used.","'NavbarToggler' is defined but never used.","'Collapse' is defined but never used.","'NavItem' is defined but never used.","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Input' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'LocalForm' is defined but never used.","'actions' is defined but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","'ratingChanged' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]